<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}" dir="{{ settings.text_direction }}">
  <head>
    {% render 'pandectes-rules' %}

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="{{ settings.color_button }}">
    <link rel="canonical" href="{{ canonical_url }}">
    <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    <link rel="dns-prefetch" href="https://ajax.googleapis.com">
    <link rel="dns-prefetch" href="https://maps.googleapis.com">
    <link rel="dns-prefetch" href="https://maps.gstatic.com">

    {%- if settings.favicon != blank -%}
      <link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png">
    {%- endif -%}

    {%- render 'page-title' -%}

    {%- if page_description -%}
      <meta name="description" content="{{ page_description | escape }}">
    {%- endif -%}

    {%- render 'social-meta-tags' -%}

    {%- render 'font-face' -%}
    {{ 'components.css' | asset_url | stylesheet_tag: preload: true }}
    {%- render 'css-variables' -%}
    {{ 'overrides.css' | asset_url | stylesheet_tag }}

    {%- style -%}
      :root {
        --productGridPadding: 12px;
      }
    {%- endstyle -%}

    {%- liquid
      assign enableSuperScript = false
      unless shop.money_format contains 'money' or shop.money_format contains '.'
        if settings.superscript_decimals
          if shop.money_format contains '{{amount}}' or shop.money_format contains '{{ amount }}'
            assign enableSuperScript = true
          elsif shop.money_format contains '{{amount_with_comma_separator}}' or shop.money_format contains '{{ amount_with_comma_separator }}'
            assign enableSuperScript = true
          endif
        endif
      endunless
    -%}

    <script>
      // HC - 20/6/2024 Breadcrumbs
      // Function to check URL and handle session storage
      (function () {
        const currentURL = window.location.href;

        // Function to extract the substring between /collections/ and /products/
        function getCollectionFromURL(url) {
          const collectionMatch = url.match(/\/collections\/([^\/]+)\/products\//);
          return collectionMatch ? collectionMatch[1] : null;
        }

        // Function to extract the substring between /products/ and ?variant
        function getProductFromURL(url) {
          const productMatch = url.match(/\/products\/([^\/?]+)/);
          return productMatch ? productMatch[1] : null;
        }

        const collection = getCollectionFromURL(currentURL);
        const product = getProductFromURL(currentURL);

        // Check if there's a saved product in sessionStorage
        const previousProduct = sessionStorage.getItem('previousProduct');

        // Check if the URL contains /collections/ and /products/ and save the extracted part to sessionStorage
        if (currentURL.includes('/collections/') && currentURL.includes('/products/')) {
          sessionStorage.setItem('previousCollection', collection);
          sessionStorage.setItem('previousProduct', product);
        } else if (previousProduct != product) {
          sessionStorage.setItem('previousCollection', '');
          sessionStorage.setItem('previousProduct', '');
          document.addEventListener('DOMContentLoaded', function () {
            const breadcrumbs = document.querySelectorAll('.custom-breadcrumbs');
            const defaultBreadcrumbs = document.querySelectorAll('.default-breadcrumbs');
            breadcrumbs.forEach(function (breadcrumb) {
              if (breadcrumb) {
                breadcrumb.remove();
              }
            });
            defaultBreadcrumbs.forEach(function (breadcrumb) {
              if (breadcrumb) {
                breadcrumb.style.display = 'block';
              }
            });
          });
        }

        // Check if there's a saved collection in sessionStorage
        const previousCollection = sessionStorage.getItem('previousCollection');
        document.addEventListener('DOMContentLoaded', function () {
          const collectionNameElements = document.querySelectorAll('.collectionName');
          let allCollections, names;
          // add file URL here
          fetch(
            'https://cdn.shopify.com/s/files/1/0483/3158/7741/files/collections-names_f28293a9-6697-4777-b802-9f95df34d76c.json?v=1720775250'
          )
            .then((response) => response.json())
            .then((data) => {
              names = data;
            });
          fetch('https://goodevas.com/collections.json?limit=50')
            .then((response) => response.json()) // Parse response as JSON
            .then((collections) => {
              allCollections = collections;
              console.log(collections);
              collectionNameElements.forEach(function (collectionNameElement) {
                if (collectionNameElement) {
                  collectionNameElement.href = collectionNameElement.href + '/collections/' + previousCollection;
                  allCollections.collections.forEach((collection) => {
                    console.log(collection.handle, previousCollection);
                    if (collection.handle == previousCollection) {
                      collectionNameElement.innerHTML = getTranslation(
                        '{{ localization.language.iso_code}}',
                        collection.title,
                        names
                      );
                    }
                  });
                }
              });
            })
            .catch((err) => console.error(err)); // Log any errors
        });
      })();

      function getTranslation(languageCode, collectionTitle, names) {
        for (const collection in names.collections) {
          if (names.collections[collection].en === collectionTitle) {
            return names.collections[collection][languageCode] || 'Translation not available';
          }
        }
        return 'Collection title not found';
      }
    </script>

    <script>
      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');

      window.theme = window.theme || {};
      theme.routes = {
        home: "{{ routes.root_url }}",
        collections: "{{ routes.collections_url }}",
        cart: "{{ routes.cart_url | append: '.js' }}",
        cartPage: "{{ routes.cart_url }}",
        cartAdd: "{{ routes.cart_add_url | append: '.js' }}",
        cartChange: "{{ routes.cart_change_url | append: '.js' }}",
        search: "{{ routes.search_url }}",
        predictiveSearch: "{{ routes.predictive_search_url }}"
      };

      theme.strings = {
        soldOut: {{ 'info.sold_out' | t | json }},
        unavailable: {{ 'info.unavailable' | t | json }},
        inStockLabel: {{ 'info.in_stock' | t | json }},
        oneStockLabel: {{ 'info.low_stock_count.one' | t: count: '[count]' | json }},
        otherStockLabel: {{ 'info.low_stock_count.other' | t: count: '[count]' | json }},
        willNotShipUntil: {{ 'info.ready_to_ship_on' | t: date: '[date]' | json }},
        willBeInStockAfter: {{ 'info.back_in_stock_on' | t: date: '[date]' | json }},
        waitingForStock: {{ 'info.backordered' | t | json }},
        savePrice: {{ 'info.save_amount' | t: saved_amount: '[saved_amount]' | json }},
        cartEmpty: {{ 'info.cart_empty' | t | json }},
        cartTermsConfirmation: {{ 'info.you_must_agree' | t | json }},
        searchCollections: {{ 'labels.collections' | t | json }},
        searchPages: {{ 'labels.pages' | t | json }},
        searchArticles: {{ 'labels.articles' | t | json }},
        maxQuantity: {{ 'info.cart_max_quantity' | t: quantity: '[quantity]', title: '[title]' | json }}
      };
      theme.settings = {
        cartType: {{ settings.cart_type | json }},
        isCustomerTemplate: {% if request.page_type contains 'customers/' %}true{% else %}false{% endif %},
        moneyFormat: {{ shop.money_format | json }},
        saveType: {{ settings.product_save_type | json }},
        productImageSize: {{ settings.product_grid_image_size | json }},
        productImageCover: {{ settings.product_grid_image_fill }},
        predictiveSearch: {{ settings.predictive_search_enabled }},
        predictiveSearchType: {{ settings.search_type | json }},
        superScriptSetting: {{ settings.superscript_decimals }},
        superScriptPrice: {{ enableSuperScript }},
        quickView: {{ settings.quick_shop_enable }},
        quickAdd: {{ settings.quick_add_enable }},
        themeName: 'Expanse',
        themeVersion: "5.2.3" // x-release-please-version
      };
    </script>

    <script>
      // HC - June 2024 - Remove /collections/[collectionName] from url
      (function () {
        const url = window.location.href;
        const collectionsString = '/collections/';
        const productsString = '/products/';

        if (url.includes(collectionsString) && url.includes(productsString)) {
          const collectionsIndex = url.indexOf(collectionsString);

          const productsIndex = url.indexOf(productsString);

          if (productsIndex > collectionsIndex) {
            const newUrl = url.substring(0, collectionsIndex) + url.substring(productsIndex);
            window.history.replaceState({}, document.title, newUrl);
          }
        }
      })();
    </script>

    {%- render 'import-map' -%}
    {%- render 'es-module-shims' -%}
    {%- render 'is-land' -%}
    {%- render 'preload-js' -%}

    {% # theme-check-disable %}

    {% capture content_for_header_custom %}
      {{ content_for_header }}
    {% endcapture %}

    {% assign content_for_header_filtered = '' %}

    {% assign lines = content_for_header_custom | split: '\n' %}

    {% for line in lines %}
      {% if line contains 'hreflang="' %}
        {{
          line
          | replace: '<link rel="alternate" hreflang="en-JE" href="https://goodevas.com/en-gb">', ''
          | replace: '<link rel="alternate" hreflang="en-CA" href="https://goodevas.com/en-ca">',
            '<link rel="alternate" hreflang="en-CA" href="https://goodevas.ca">'
          | replace: '<link rel="alternate" hreflang="fr-CA" href="https://goodevas.com/fr-ca">',
            '<link rel="alternate" hreflang="fr-CA" href="https://goodevas.ca/fr">'
          | replace: '<link rel="alternate" hreflang="fr-AT" href="https://goodevas.com/fr-at">', ''
          | replace: '<link rel="alternate" hreflang="ar-QA" href="https://goodevas.com/ar-qa">',
            '<link rel="alternate" hreflang="ar-QA" href="https://goodevas.ae/ar-qa">'
          | replace: '<link rel="alternate" hreflang="en-QA" href="https://goodevas.com/en-qa">',
            '<link rel="alternate" hreflang="en-QA" href="https://goodevas.ae/en-qa">'
          | replace: '<link rel="alternate" hreflang="ar-KW" href="https://goodevas.com/ar-kw">',
            '<link rel="alternate" hreflang="ar-KW" href="https://goodevas.ae/ar-kw">'
          | replace: '<link rel="alternate" hreflang="en-KW" href="https://goodevas.com/en-kw">',
            '<link rel="alternate" hreflang="en-KW" href="https://goodevas.ae/en-kw">'
          | replace: '<link rel="alternate" hreflang="ar-AE" href="https://goodevas.com/ar-ae">',
            '<link rel="alternate" hreflang="ar-AE" href="https://goodevas.com/ar-ae">'
          | replace: '<link rel="alternate" hreflang="en-AE" href="https://goodevas.com/en-ae">',
            '<link rel="alternate" hreflang="en-AE" href="https://goodevas.ae/en">'
          | replace: '<link rel="alternate" hreflang="ar-BH" href="https://goodevas.com/ar-bh">',
            '<link rel="alternate" hreflang="ar-BH" href="https://goodevas.ae/ar-bh">'
          | replace: '<link rel="alternate" hreflang="ar-BH" href="https://goodevas.com/ar-bh">',
            '<link rel="alternate" hreflang="en-BH" href="https://goodevas.ae/en-bh">'
          | replace: '<link rel="alternate" hreflang="ar-SA" href="https://goodevas.com/ar-sa">',
            '<link rel="alternate" hreflang="ar-SA" href="https://goodevas.ae/ar-sa">'
          | replace: '<link rel="alternate" hreflang="en-SA" href="https://goodevas.com/en-sa">',
            '<link rel="alternate" hreflang="en-SA" href="https://goodevas.ae/en-sa">'
        }}
      {% endif %}
    {% endfor %}

    {% # theme-check-enable %}

    <script src="{{ 'theme.js' | asset_url }}" defer="defer"></script>

    {%- if request.page_type contains 'customers/' -%}
      <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer="defer"></script>
    {%- endif -%}

    {% if request.design_mode %}
      <script src="https://api.archetypethemes.co/design-mode.js" defer="defer"></script>
    {% endif %}
  </head>

  <body
    class="template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }}{% if request.path == '/challenge' %} template-challange{% endif %}"
    data-button_style="{{ settings.button_style }}"
    data-edges="{{ settings.roundness }}"
    data-type_header_capitalize="{{ settings.type_header_capitalize }}"
    data-swatch_style="{{ settings.swatch_style }}"
    data-grid-style="{{ settings.product_grid_style }}"
  >
    <a class="in-page-link visually-hidden skip-link" href="#MainContent">{{ 'actions.skip_to_content' | t }}</a>

    <div id="PageContainer" class="page-container">
      <div class="transition-body">
        {%- sections 'header-group' -%}
        {%- sections 'popup-group' -%}

        <main class="main-content" id="MainContent">
          {{ content_for_layout }}
        </main>

        {%- sections 'footer-group' -%}
      </div>
    </div>

    {%- liquid
      render 'video-modal'
      render 'photoswipe-template'
      render 'tool-tip'
    -%}
    <!-- Widget : Buy Bed Gift swing set -->
    <div data-rebuy-id="155052"></div>
    <!-- End Widget : Buy Bed Gift swing set -->
  </body>
</html>
